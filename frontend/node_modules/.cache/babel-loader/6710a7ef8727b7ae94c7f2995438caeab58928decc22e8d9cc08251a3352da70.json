{"ast":null,"code":"/**\r\n * 웹 성능 측정 및 백엔드 모니터링 연계 유틸리티\r\n * \r\n * 백엔드 협업 포인트:\r\n * - 성능 메트릭을 백엔드 모니터링 시스템으로 전송 가능\r\n * - 사용자 경험 데이터를 백엔드에서 분석 및 대시보드 표시\r\n * - Core Web Vitals 데이터를 통한 프론트엔드 성능 최적화 지표 제공\r\n * \r\n * 측정 항목:\r\n * - CLS: Cumulative Layout Shift (레이아웃 이동)\r\n * - FID: First Input Delay (첫 입력 지연)\r\n * - FCP: First Contentful Paint (첫 콘텐츠 렌더링)\r\n * - LCP: Largest Contentful Paint (최대 콘텐츠 렌더링)\r\n * - TTFB: Time to First Byte (첫 바이트 수신 시간)\r\n */\n\n// Web Vitals 메트릭 타입 정의\n\n/**\r\n * 성능 메트릭 수집 및 처리 함수\r\n * \r\n * 백엔드 연계 확장 가능:\r\n * - 성능 데이터를 API를 통해 백엔드로 전송\r\n * - 사용자별 성능 프로파일링 데이터 수집\r\n * - 실시간 성능 모니터링 및 알림 시스템 구축\r\n * \r\n * @param onPerfEntry 성능 메트릭 처리 콜백 함수\r\n */\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry); // 레이아웃 안정성 측정\n      getFID(onPerfEntry); // 사용자 상호작용 반응성 측정\n      getFCP(onPerfEntry); // 첫 콘텐츠 표시 속도 측정\n      getLCP(onPerfEntry); // 페이지 로딩 완료 속도 측정\n      getTTFB(onPerfEntry); // 서버 응답 속도 측정 (백엔드 성능 지표)\n    });\n  }\n};\nexport default reportWebVitals;","map":{"version":3,"names":["reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"sources":["C:/Users/arh05/AWS2_GIOT_FULL/frontend/src/reportWebVitals.ts"],"sourcesContent":["/**\r\n * 웹 성능 측정 및 백엔드 모니터링 연계 유틸리티\r\n * \r\n * 백엔드 협업 포인트:\r\n * - 성능 메트릭을 백엔드 모니터링 시스템으로 전송 가능\r\n * - 사용자 경험 데이터를 백엔드에서 분석 및 대시보드 표시\r\n * - Core Web Vitals 데이터를 통한 프론트엔드 성능 최적화 지표 제공\r\n * \r\n * 측정 항목:\r\n * - CLS: Cumulative Layout Shift (레이아웃 이동)\r\n * - FID: First Input Delay (첫 입력 지연)\r\n * - FCP: First Contentful Paint (첫 콘텐츠 렌더링)\r\n * - LCP: Largest Contentful Paint (최대 콘텐츠 렌더링)\r\n * - TTFB: Time to First Byte (첫 바이트 수신 시간)\r\n */\r\n\r\n// Web Vitals 메트릭 타입 정의\r\ntype ReportHandler = (metric: {\r\n  name: string;\r\n  value: number;\r\n  id: string;\r\n  delta: number;\r\n}) => void;\r\n\r\n/**\r\n * 성능 메트릭 수집 및 처리 함수\r\n * \r\n * 백엔드 연계 확장 가능:\r\n * - 성능 데이터를 API를 통해 백엔드로 전송\r\n * - 사용자별 성능 프로파일링 데이터 수집\r\n * - 실시간 성능 모니터링 및 알림 시스템 구축\r\n * \r\n * @param onPerfEntry 성능 메트릭 처리 콜백 함수\r\n */\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  // 레이아웃 안정성 측정\r\n      getFID(onPerfEntry);  // 사용자 상호작용 반응성 측정\r\n      getFCP(onPerfEntry);  // 첫 콘텐츠 표시 속도 측정\r\n      getLCP(onPerfEntry);  // 페이지 로딩 완료 속도 측정\r\n      getTTFB(onPerfEntry); // 서버 응답 속도 측정 (백엔드 성능 지표)\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAIC,WAA2B,IAAW;EAC7D,IAAIA,WAAW,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;IACpD,MAAM,CAAC,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC;IAAQ,CAAC,KAAK;MACzEJ,MAAM,CAACF,WAAW,CAAC,CAAC,CAAE;MACtBG,MAAM,CAACH,WAAW,CAAC,CAAC,CAAE;MACtBI,MAAM,CAACJ,WAAW,CAAC,CAAC,CAAE;MACtBK,MAAM,CAACL,WAAW,CAAC,CAAC,CAAE;MACtBM,OAAO,CAACN,WAAW,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}