{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arh05\\\\AWS2_GIOT_FULL\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\DashboardScreen.tsx\",\n  _s = $RefreshSig$(); // Dashboard.tsx - 메인 대시보드 컴포넌트\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Bell, User, ChevronDown, Info } from 'lucide-react';\nimport { DashboardAPI, DashboardUtils, SENSOR_OPTIONS, MENU_ITEMS } from '../../services/DashboardTypes';\nimport './Dashboard.module.css';\n\n// 사이드바 아이템 컴포넌트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SidebarItem = ({\n  icon,\n  label,\n  isActive,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  className: `sidebarItem ${isActive ? 'sidebarItemActive' : ''}`,\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\n\n// 알림 드롭다운 컴포넌트\n_c = SidebarItem;\nconst NotificationDropdown = ({\n  isOpen,\n  onClose,\n  notifications\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdownHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"dropdownTitle\",\n          children: \"\\uC54C\\uB9BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notificationList\",\n        children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emptyNotification\",\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uC54C\\uB9BC\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notificationItem ${!notification.read ? 'notificationItemUnread' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notificationMessage\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notificationTimestamp\",\n            children: notification.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"dropdownOverlay\",\n      \"aria-label\": \"\\uC54C\\uB9BC \\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// 관리자 드롭다운 컴포넌트\n_c2 = NotificationDropdown;\nconst AdminDropdown = ({\n  isOpen,\n  onClose\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminDropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminDropdownContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"adminDropdownItem\",\n          children: \"\\uD504\\uB85C\\uD544 \\uC124\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"adminDropdownItem\",\n          children: \"\\uACC4\\uC815 \\uAD00\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adminDropdownDivider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"adminDropdownItem adminDropdownLogout\",\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"dropdownOverlay\",\n      \"aria-label\": \"\\uAD00\\uB9AC\\uC790 \\uBA54\\uB274 \\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// 센서 차트 컴포넌트\n_c3 = AdminDropdown;\nconst SensorChart = ({\n  sensorData,\n  isLoading,\n  error\n}) => {\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorTitle\",\n        children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC2E4\\uD328\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  if (!sensorData || !sensorData.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorTitle\",\n        children: \"\\uB370\\uC774\\uD130\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n  const chartData = sensorData.labels.map((label, index) => ({\n    time: label,\n    value: sensorData.values[index]\n  }));\n  const color = DashboardUtils.getChartColor(sensorData.sensorType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartContainer\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: sensorData.sensorType === 'gas' ? /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#f0f0f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'white',\n            border: '1px solid #e5e7eb',\n            borderRadius: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: color,\n          fill: color,\n          fillOpacity: 0.3,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#f0f0f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'white',\n            border: '1px solid #e5e7eb',\n            borderRadius: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: color,\n          strokeWidth: 2,\n          dot: {\n            fill: color,\n            strokeWidth: 2,\n            r: 4\n          },\n          activeDot: {\n            r: 6,\n            stroke: color,\n            strokeWidth: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n// 메인 대시보드 컴포넌트\n_c4 = SensorChart;\nconst DashboardScreen = ({\n  onNavigateToChatbot,\n  onNavigateToHistory,\n  onNavigateToRole\n}) => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('Dashboard');\n  const [notificationData, setNotificationData] = useState({\n    count: 0,\n    notifications: []\n  });\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [isAdminMenuOpen, setIsAdminMenuOpen] = useState(false);\n  const [selectedSensor, setSelectedSensor] = useState('temperature');\n  const [sensorData, setSensorData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [allSensorData, setAllSensorData] = useState({\n    temperature: null,\n    humidity: null,\n    gas: null\n  });\n\n  // 센서 데이터 가져오기\n  const fetchSensorData = async sensorType => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await DashboardAPI.getSensorData(sensorType);\n      if (data.success) {\n        setSensorData(data);\n        setAllSensorData(prev => ({\n          ...prev,\n          [sensorType]: data\n        }));\n      } else {\n        setError('데이터를 불러올 수 없습니다.');\n      }\n    } catch (err) {\n      setError('데이터를 가져오는 중 오류가 발생했습니다.');\n      console.error('센서 데이터 가져오기 실패:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ✅ REPLACE 전체 함수\n  const fetchAllSensorData = async () => {\n    try {\n      const results = await Promise.all(SENSOR_OPTIONS.map(opt => DashboardAPI.getSensorData(opt.value)));\n      const newAllSensorData = {\n        temperature: null,\n        humidity: null,\n        gas: null\n      };\n      results.forEach((result, index) => {\n        if (result.success) {\n          const sensorType = SENSOR_OPTIONS[index].value;\n          newAllSensorData[sensorType] = result;\n        }\n      });\n      setAllSensorData(newAllSensorData);\n    } catch (err) {\n      console.error('전체 센서 데이터 가져오기 실패:', err);\n    }\n  };\n\n  // 알림 데이터 가져오기\n  const fetchNotifications = async () => {\n    try {\n      const data = await DashboardAPI.getNotifications();\n      setNotificationData(data);\n    } catch (error) {\n      console.error('알림 데이터 가져오기 실패:', error);\n    }\n  };\n\n  // 메뉴 클릭 핸들러\n  const handleMenuClick = (label, path) => {\n    setActiveMenu(label);\n    switch (label) {\n      case 'Chatbot':\n        onNavigateToChatbot();\n        break;\n      case 'History':\n        onNavigateToHistory();\n        break;\n      case 'Dashboard':\n        // 대시보드면 현재 화면 유지\n        break;\n      case 'Logout':\n        onNavigateToRole === null || onNavigateToRole === void 0 ? void 0 : onNavigateToRole(); // 역할 선택 화면으로\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 센서 선택 핸들러\n  const handleSensorSelect = sensorType => {\n    setSelectedSensor(sensorType);\n    fetchSensorData(sensorType);\n  };\n\n  // 컴포넌트 마운트 시 초기 데이터 로딩\n  useEffect(() => {\n    fetchNotifications();\n    fetchSensorData('temperature'); // 기본값\n    fetchAllSensorData(); // 테이블용 전체 데이터\n\n    // 주기적으로 데이터 업데이트 (30초마다)\n    const interval = setInterval(() => {\n      fetchNotifications();\n      fetchSensorData(selectedSensor);\n      fetchAllSensorData();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [selectedSensor]);\n\n  // 선택된 센서 변경 시 데이터 다시 가져오기\n  useEffect(() => {\n    if (allSensorData[selectedSensor]) {\n      setSensorData(allSensorData[selectedSensor]);\n    }\n  }, [selectedSensor, allSensorData]);\n\n  // 실시간 시간 업데이트를 위한 useEffect 추가\n  const [currentTime, setCurrentTime] = useState(DashboardUtils.getCurrentDateTime());\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      setCurrentTime(DashboardUtils.getCurrentDateTime());\n    }, 60000); // 1분마다 업데이트\n\n    return () => clearInterval(timeInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebarHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebarTitle\",\n          children: \"AWS IOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebarMenu\",\n        children: MENU_ITEMS.map(item => /*#__PURE__*/_jsxDEV(SidebarItem, {\n          icon: item.icon,\n          label: item.label,\n          isActive: activeMenu === item.label,\n          onClick: () => handleMenuClick(item.label, item.path)\n        }, item.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"pageTitle\",\n            children: activeMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pageSubtitle\",\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerRight\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headerItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsNotificationOpen(!isNotificationOpen);\n                setIsAdminMenuOpen(false);\n              },\n              className: \"headerButton\",\n              \"aria-label\": \"\\uC54C\\uB9BC\",\n              children: [/*#__PURE__*/_jsxDEV(Bell, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this), notificationData.count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notificationBadge\",\n                children: notificationData.count > 99 ? '99+' : notificationData.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NotificationDropdown, {\n              isOpen: isNotificationOpen,\n              onClose: () => setIsNotificationOpen(false),\n              notifications: notificationData.notifications\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headerItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsAdminMenuOpen(!isAdminMenuOpen);\n                setIsNotificationOpen(false);\n              },\n              className: \"adminButton\",\n              \"aria-label\": \"\\uAD00\\uB9AC\\uC790 \\uBA54\\uB274\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uAD00\\uB9AC\\uC790\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AdminDropdown, {\n              isOpen: isAdminMenuOpen,\n              onClose: () => setIsAdminMenuOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboardContent\",\n        children: activeMenu === 'Dashboard' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"chartSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sectionHeader\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"sectionTitle\",\n                children: \"TIME-AVERAGED DATA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sensorSelector\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedSensor,\n                  onChange: e => handleSensorSelect(e.target.value),\n                  className: \"sensorSelect\",\n                  children: SENSOR_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chartCard\",\n              children: /*#__PURE__*/_jsxDEV(SensorChart, {\n                sensorData: sensorData,\n                isLoading: isLoading,\n                error: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"summarySection\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sectionHeader\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"sectionTitle\",\n                children: \"CURRENT & PREDICTION DATA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infoIcon\",\n                children: /*#__PURE__*/_jsxDEV(Info, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summaryCard\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"summaryTable\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"TIME\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"TEMPERATURE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"HUMIDITY\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"GAS CONCENTRATION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"CURRENT DATA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.temperature ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: DashboardUtils.getStatusClass(allSensorData.temperature.current.status),\n                        children: [allSensorData.temperature.current.value.toFixed(1), allSensorData.temperature.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 489,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.humidity ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: DashboardUtils.getStatusClass(allSensorData.humidity.current.status),\n                        children: [allSensorData.humidity.current.value.toFixed(1), allSensorData.humidity.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.gas ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: DashboardUtils.getStatusClass(allSensorData.gas.current.status),\n                        children: [allSensorData.gas.current.value.toFixed(0), allSensorData.gas.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 507,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"PREDICTION DATA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.temperature ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [allSensorData.temperature.prediction.value.toFixed(1), allSensorData.temperature.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 519,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.humidity ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [allSensorData.humidity.prediction.value.toFixed(1), allSensorData.humidity.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.gas ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [allSensorData.gas.prediction.value.toFixed(0), allSensorData.gas.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // 다른 메뉴 선택 시 플레이스홀더\n        _jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '80px 20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '24px',\n              fontWeight: 'bold',\n              color: '#374151',\n              marginBottom: '16px'\n            },\n            children: [activeMenu, \" \\uD398\\uC774\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#6b7280',\n              marginBottom: '8px'\n            },\n            children: [\"\\uD604\\uC7AC \\uC120\\uD0DD\\uB41C \\uBA54\\uB274: \", activeMenu]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '14px',\n              color: '#9ca3af'\n            },\n            children: \"\\uC2E4\\uC81C \\uD398\\uC774\\uC9C0 \\uCEE8\\uD150\\uCE20\\uB97C \\uC5EC\\uAE30\\uC5D0 \\uAD6C\\uD604\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardScreen, \"DxYJa/ciMlV9NA3bsB6GYx6Djl0=\");\n_c5 = DashboardScreen;\n;\nexport default DashboardScreen;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SidebarItem\");\n$RefreshReg$(_c2, \"NotificationDropdown\");\n$RefreshReg$(_c3, \"AdminDropdown\");\n$RefreshReg$(_c4, \"SensorChart\");\n$RefreshReg$(_c5, \"DashboardScreen\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Bell","User","ChevronDown","Info","DashboardAPI","DashboardUtils","SENSOR_OPTIONS","MENU_ITEMS","jsxDEV","_jsxDEV","Fragment","_Fragment","SidebarItem","icon","label","isActive","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","NotificationDropdown","isOpen","onClose","notifications","length","map","notification","read","message","timestamp","id","_c2","AdminDropdown","_c3","SensorChart","sensorData","isLoading","error","success","chartData","labels","index","time","value","values","color","getChartColor","sensorType","width","height","data","strokeDasharray","stroke","dataKey","fontSize","contentStyle","backgroundColor","border","borderRadius","type","fill","fillOpacity","strokeWidth","dot","r","activeDot","_c4","DashboardScreen","onNavigateToChatbot","onNavigateToHistory","onNavigateToRole","_s","activeMenu","setActiveMenu","notificationData","setNotificationData","count","isNotificationOpen","setIsNotificationOpen","isAdminMenuOpen","setIsAdminMenuOpen","selectedSensor","setSelectedSensor","setSensorData","setIsLoading","setError","allSensorData","setAllSensorData","temperature","humidity","gas","fetchSensorData","getSensorData","prev","err","console","fetchAllSensorData","results","Promise","all","opt","newAllSensorData","forEach","result","fetchNotifications","getNotifications","handleMenuClick","path","handleSensorSelect","interval","setInterval","clearInterval","currentTime","setCurrentTime","getCurrentDateTime","timeInterval","item","size","onChange","e","target","option","getStatusClass","current","status","toFixed","unit","prediction","style","textAlign","padding","fontWeight","marginBottom","_c5","$RefreshReg$"],"sources":["C:/Users/arh05/AWS2_GIOT_FULL/frontend/src/pages/Dashboard/DashboardScreen.tsx"],"sourcesContent":["// Dashboard.tsx - 메인 대시보드 컴포넌트\r\ninterface DashboardScreenProps {\r\n  onNavigateToChatbot: () => void;\r\n  onNavigateToHistory: () => void;\r\n  onNavigateToRole?: () => void;\r\n}\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { Bell, User, ChevronDown, Info } from 'lucide-react';\r\nimport { \r\n  NotificationData, \r\n  SensorData, \r\n  SensorType, \r\n  SidebarItemProps,\r\n  DashboardAPI,\r\n  DashboardUtils,\r\n  SENSOR_OPTIONS,\r\n  MENU_ITEMS\r\n} from '../../services/DashboardTypes';\r\nimport './Dashboard.module.css';\r\n\r\n// 사이드바 아이템 컴포넌트\r\nconst SidebarItem: React.FC<SidebarItemProps> = ({ icon, label, isActive, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={`sidebarItem ${isActive ? 'sidebarItemActive' : ''}`}\r\n  >\r\n    <span>{icon}</span>\r\n    <span>{label}</span>\r\n  </button>\r\n);\r\n\r\n// 알림 드롭다운 컴포넌트\r\nconst NotificationDropdown: React.FC<{ \r\n  isOpen: boolean; \r\n  onClose: () => void; \r\n  notifications: NotificationData['notifications'];\r\n}> = ({ isOpen, onClose, notifications }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <div className=\"dropdownHeader\">\r\n          <h3 className=\"dropdownTitle\">알림</h3>\r\n        </div>\r\n        <div className=\"notificationList\">\r\n          {notifications.length === 0 ? (\r\n            <div className=\"emptyNotification\">\r\n              새로운 알림이 없습니다\r\n            </div>\r\n          ) : (\r\n            notifications.map((notification) => (\r\n              <div \r\n                key={notification.id} \r\n                className={`notificationItem ${!notification.read ? 'notificationItemUnread' : ''}`}\r\n              >\r\n                <p className=\"notificationMessage\">{notification.message}</p>\r\n                <p className=\"notificationTimestamp\">{notification.timestamp}</p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <button \r\n        onClick={onClose}\r\n        className=\"dropdownOverlay\"\r\n        aria-label=\"알림 닫기\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// 관리자 드롭다운 컴포넌트\r\nconst AdminDropdown: React.FC<{ isOpen: boolean; onClose: () => void }> = ({ isOpen, onClose }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminDropdown\">\r\n        <div className=\"adminDropdownContent\">\r\n          <button className=\"adminDropdownItem\">프로필 설정</button>\r\n          <button className=\"adminDropdownItem\">계정 관리</button>\r\n          <div className=\"adminDropdownDivider\" />\r\n          <button className=\"adminDropdownItem adminDropdownLogout\">로그아웃</button>\r\n        </div>\r\n      </div>\r\n      <button \r\n        onClick={onClose}\r\n        className=\"dropdownOverlay\"\r\n        aria-label=\"관리자 메뉴 닫기\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// 센서 차트 컴포넌트\r\nconst SensorChart: React.FC<{ \r\n  sensorData: SensorData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}> = ({ sensorData, isLoading, error }) => {\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loadingContainer\">\r\n        <div>데이터를 불러오는 중...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"errorContainer\">\r\n        <div className=\"errorTitle\">데이터 로딩 실패</div>\r\n        <div className=\"errorMessage\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!sensorData || !sensorData.success) {\r\n    return (\r\n      <div className=\"errorContainer\">\r\n        <div className=\"errorTitle\">데이터를 사용할 수 없습니다</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const chartData = sensorData.labels.map((label, index) => ({\r\n    time: label,\r\n    value: sensorData.values[index]\r\n  }));\r\n\r\n  const color = DashboardUtils.getChartColor(sensorData.sensorType);\r\n\r\n  return (\r\n    <div className=\"chartContainer\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        {sensorData.sensorType === 'gas' ? (\r\n          <AreaChart data={chartData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n            <XAxis \r\n              dataKey=\"time\" \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <YAxis \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <Tooltip \r\n              contentStyle={{\r\n                backgroundColor: 'white',\r\n                border: '1px solid #e5e7eb',\r\n                borderRadius: '6px'\r\n              }}\r\n            />\r\n            <Area \r\n              type=\"monotone\" \r\n              dataKey=\"value\" \r\n              stroke={color}\r\n              fill={color}\r\n              fillOpacity={0.3}\r\n              strokeWidth={2}\r\n            />\r\n          </AreaChart>\r\n        ) : (\r\n          <LineChart data={chartData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n            <XAxis \r\n              dataKey=\"time\" \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <YAxis \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <Tooltip \r\n              contentStyle={{\r\n                backgroundColor: 'white',\r\n                border: '1px solid #e5e7eb',\r\n                borderRadius: '6px'\r\n              }}\r\n            />\r\n            <Line \r\n              type=\"monotone\" \r\n              dataKey=\"value\" \r\n              stroke={color}\r\n              strokeWidth={2}\r\n              dot={{ fill: color, strokeWidth: 2, r: 4 }}\r\n              activeDot={{ r: 6, stroke: color, strokeWidth: 2 }}\r\n            />\r\n          </LineChart>\r\n        )}\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 메인 대시보드 컴포넌트\r\nconst DashboardScreen: React.FC<DashboardScreenProps> = ({\r\n  onNavigateToChatbot,\r\n  onNavigateToHistory,\r\n  onNavigateToRole,\r\n}) => {\r\n  const [activeMenu, setActiveMenu] = useState('Dashboard');\r\n  const [notificationData, setNotificationData] = useState<NotificationData>({\r\n    count: 0,\r\n    notifications: []\r\n  });\r\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\r\n  const [isAdminMenuOpen, setIsAdminMenuOpen] = useState(false);\r\n  const [selectedSensor, setSelectedSensor] = useState<SensorType>('temperature');\r\n  const [sensorData, setSensorData] = useState<SensorData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [allSensorData, setAllSensorData] = useState<Record<SensorType, SensorData | null>>({\r\n  temperature: null,\r\n  humidity: null,\r\n  gas: null,\r\n});\r\n\r\n  // 센서 데이터 가져오기\r\n  const fetchSensorData = async (sensorType: SensorType) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const data = await DashboardAPI.getSensorData(sensorType);\r\n      \r\n      if (data.success) {\r\n        setSensorData(data as SensorData);\r\n        setAllSensorData(prev => ({\r\n          ...prev,\r\n          [sensorType]: data as SensorData\r\n        }));\r\n      } else {\r\n        setError('데이터를 불러올 수 없습니다.');\r\n      }\r\n    } catch (err) {\r\n      setError('데이터를 가져오는 중 오류가 발생했습니다.');\r\n      console.error('센서 데이터 가져오기 실패:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ REPLACE 전체 함수\r\nconst fetchAllSensorData = async () => {\r\n  try {\r\n    const results = await Promise.all(\r\n      SENSOR_OPTIONS.map(opt => DashboardAPI.getSensorData(opt.value as SensorType))\r\n    );\r\n\r\n    const newAllSensorData: Record<SensorType, SensorData | null> = {\r\n      temperature: null,\r\n      humidity: null,\r\n      gas: null,\r\n    };\r\n\r\n    results.forEach((result, index) => {\r\n      if (result.success) {\r\n        const sensorType = SENSOR_OPTIONS[index].value as SensorType;\r\n        newAllSensorData[sensorType] = result as SensorData;\r\n      }\r\n    });\r\n\r\n    setAllSensorData(newAllSensorData);\r\n  } catch (err) {\r\n    console.error('전체 센서 데이터 가져오기 실패:', err);\r\n  }\r\n};\r\n\r\n  // 알림 데이터 가져오기\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const data = await DashboardAPI.getNotifications();\r\n      setNotificationData(data);\r\n    } catch (error) {\r\n      console.error('알림 데이터 가져오기 실패:', error);\r\n    }\r\n  };\r\n\r\n  // 메뉴 클릭 핸들러\r\n  const handleMenuClick = (label: string, path: string) => {\r\n    setActiveMenu(label);\r\n    \r\n    switch (label) {\r\n    case 'Chatbot':\r\n      onNavigateToChatbot();\r\n      break;\r\n    case 'History':\r\n      onNavigateToHistory();\r\n      break;\r\n    case 'Dashboard':\r\n      // 대시보드면 현재 화면 유지\r\n      break;\r\n    case 'Logout':\r\n      onNavigateToRole?.();  // 역할 선택 화면으로\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n  // 센서 선택 핸들러\r\n  const handleSensorSelect = (sensorType: SensorType) => {\r\n    setSelectedSensor(sensorType);\r\n    fetchSensorData(sensorType);\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 초기 데이터 로딩\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n    fetchSensorData('temperature'); // 기본값\r\n    fetchAllSensorData(); // 테이블용 전체 데이터\r\n    \r\n    // 주기적으로 데이터 업데이트 (30초마다)\r\n    const interval = setInterval(() => {\r\n      fetchNotifications();\r\n      fetchSensorData(selectedSensor);\r\n      fetchAllSensorData();\r\n    }, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [selectedSensor]);\r\n\r\n  // 선택된 센서 변경 시 데이터 다시 가져오기\r\n  useEffect(() => {\r\n    if (allSensorData[selectedSensor]) {\r\n      setSensorData(allSensorData[selectedSensor]);\r\n    }\r\n  }, [selectedSensor, allSensorData]);\r\n\r\n  // 실시간 시간 업데이트를 위한 useEffect 추가\r\n  const [currentTime, setCurrentTime] = useState(DashboardUtils.getCurrentDateTime());\r\n  \r\n  useEffect(() => {\r\n    const timeInterval = setInterval(() => {\r\n      setCurrentTime(DashboardUtils.getCurrentDateTime());\r\n    }, 60000); // 1분마다 업데이트\r\n    \r\n    return () => clearInterval(timeInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardContainer\">\r\n      {/* 사이드바 */}\r\n      <nav className=\"sidebar\">\r\n        <div className=\"sidebarHeader\">\r\n          <h2 className=\"sidebarTitle\">AWS IOT</h2>\r\n        </div>\r\n\r\n        <div className=\"sidebarMenu\">\r\n          {MENU_ITEMS.map((item) => (\r\n            <SidebarItem\r\n              key={item.label}\r\n              icon={item.icon}\r\n              label={item.label}\r\n              isActive={activeMenu === item.label}\r\n              onClick={() => handleMenuClick(item.label, item.path)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </nav>\r\n\r\n      {/* 메인 컨텐츠 영역 */}\r\n      <main className=\"mainContent\">\r\n        {/* 상단 헤더 */}\r\n        <header className=\"header\">\r\n          <div className=\"headerLeft\">\r\n            <h1 className=\"pageTitle\">{activeMenu}</h1>\r\n            <p className=\"pageSubtitle\">{currentTime}</p>\r\n          </div>\r\n          \r\n          <div className=\"headerRight\">\r\n            {/* 알림 아이콘 */}\r\n            <div className=\"headerItem\">\r\n              <button\r\n                onClick={() => {\r\n                  setIsNotificationOpen(!isNotificationOpen);\r\n                  setIsAdminMenuOpen(false);\r\n                }}\r\n                className=\"headerButton\"\r\n                aria-label=\"알림\"\r\n              >\r\n                <Bell size={20} />\r\n                {notificationData.count > 0 && (\r\n                  <span className=\"notificationBadge\">\r\n                    {notificationData.count > 99 ? '99+' : notificationData.count}\r\n                  </span>\r\n                )}\r\n              </button>\r\n              \r\n              <NotificationDropdown\r\n                isOpen={isNotificationOpen}\r\n                onClose={() => setIsNotificationOpen(false)}\r\n                notifications={notificationData.notifications}\r\n              />\r\n            </div>\r\n\r\n            {/* 관리자 메뉴 */}\r\n            <div className=\"headerItem\">\r\n              <button\r\n                onClick={() => {\r\n                  setIsAdminMenuOpen(!isAdminMenuOpen);\r\n                  setIsNotificationOpen(false);\r\n                }}\r\n                className=\"adminButton\"\r\n                aria-label=\"관리자 메뉴\"\r\n              >\r\n                <User size={20} />\r\n                <span>관리자</span>\r\n                <ChevronDown size={16} />\r\n              </button>\r\n              \r\n              <AdminDropdown\r\n                isOpen={isAdminMenuOpen}\r\n                onClose={() => setIsAdminMenuOpen(false)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 메인 대시보드 컨텐츠 */}\r\n        <div className=\"dashboardContent\">\r\n          {activeMenu === 'Dashboard' ? (\r\n            <>\r\n              {/* 시간평균 데이터 차트 섹션 */}\r\n              <section className=\"chartSection\">\r\n                <div className=\"sectionHeader\">\r\n                  <h2 className=\"sectionTitle\">TIME-AVERAGED DATA</h2>\r\n                  \r\n                  {/* 센서 선택 드롭다운 */}\r\n                  <div className=\"sensorSelector\">\r\n                    <select\r\n                      value={selectedSensor}\r\n                      onChange={(e) => handleSensorSelect(e.target.value as SensorType)}\r\n                      className=\"sensorSelect\"\r\n                    >\r\n                      {SENSOR_OPTIONS.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"chartCard\">\r\n                  <SensorChart \r\n                    sensorData={sensorData}\r\n                    isLoading={isLoading}\r\n                    error={error}\r\n                  />\r\n                </div>\r\n              </section>\r\n\r\n              {/* 현재 & 예측 데이터 테이블 섹션 */}\r\n              <section className=\"summarySection\">\r\n                <div className=\"sectionHeader\">\r\n                  <h2 className=\"sectionTitle\">CURRENT &amp; PREDICTION DATA</h2>\r\n                  <div className=\"infoIcon\">\r\n                    <Info size={16} />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"summaryCard\">\r\n                  <table className=\"summaryTable\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>TIME</th>\r\n                        <th>TEMPERATURE</th>\r\n                        <th>HUMIDITY</th>\r\n                        <th>GAS CONCENTRATION</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* 현재 데이터 행 */}\r\n                      <tr>\r\n                        <td>CURRENT DATA</td>\r\n                        <td>\r\n                          {allSensorData.temperature ? (\r\n                            <span className={DashboardUtils.getStatusClass(allSensorData.temperature.current.status)}>\r\n                              {allSensorData.temperature.current.value.toFixed(1)}{allSensorData.temperature.unit}\r\n                            </span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.humidity ? (\r\n                            <span className={DashboardUtils.getStatusClass(allSensorData.humidity.current.status)}>\r\n                              {allSensorData.humidity.current.value.toFixed(1)}{allSensorData.humidity.unit}\r\n                            </span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.gas ? (\r\n                            <span className={DashboardUtils.getStatusClass(allSensorData.gas.current.status)}>\r\n                              {allSensorData.gas.current.value.toFixed(0)}{allSensorData.gas.unit}\r\n                            </span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      \r\n                      {/* 예측 데이터 행 */}\r\n                      <tr>\r\n                        <td>PREDICTION DATA</td>\r\n                        <td>\r\n                          {allSensorData.temperature ? (\r\n                            <span>{allSensorData.temperature.prediction.value.toFixed(1)}{allSensorData.temperature.unit}</span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.humidity ? (\r\n                            <span>{allSensorData.humidity.prediction.value.toFixed(1)}{allSensorData.humidity.unit}</span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.gas ? (\r\n                            <span>{allSensorData.gas.prediction.value.toFixed(0)}{allSensorData.gas.unit}</span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </section>\r\n            </>\r\n          ) : (\r\n            // 다른 메뉴 선택 시 플레이스홀더\r\n            <div style={{ textAlign: 'center', padding: '80px 20px' }}>\r\n              <h2 style={{ fontSize: '24px', fontWeight: 'bold', color: '#374151', marginBottom: '16px' }}>\r\n                {activeMenu} 페이지\r\n              </h2>\r\n              <p style={{ color: '#6b7280', marginBottom: '8px' }}>\r\n                현재 선택된 메뉴: {activeMenu}\r\n              </p>\r\n              <p style={{ fontSize: '14px', color: '#9ca3af' }}>\r\n                실제 페이지 컨텐츠를 여기에 구현하세요.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n;\r\nexport default DashboardScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}