{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arh05\\\\AWS2_GIOT_FULL\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\DashboardScreen.tsx\",\n  _s = $RefreshSig$();\n// Dashboard.tsx - 메인 대시보드 컴포넌트\n\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Bell, User, ChevronDown, Info } from 'lucide-react';\nimport { DashboardAPI, DashboardUtils, SENSOR_OPTIONS, MENU_ITEMS } from '../../services/DashboardTypes';\nimport styles from \"./DashboardScreen.module.css\";\n\n// 사이드바 아이템 컴포넌트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SidebarItem = ({\n  icon,\n  label,\n  isActive,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  className: `${styles.sidebarItem} ${isActive ? styles.sidebarItemActive : ''}`,\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\n// 알림 드롭다운 컴포넌트\n_c = SidebarItem;\nconst NotificationDropdown = ({\n  isOpen,\n  onClose,\n  notifications\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dropdownHeader,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.dropdownTitle,\n          children: \"\\uC54C\\uB9BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.notificationList,\n        children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.emptyNotification,\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uC54C\\uB9BC\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.notificationItem} ${!notification.read ? styles.notificationItemUnread : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.notificationMessage,\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.notificationTimestamp,\n            children: notification.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: styles.dropdownOverlay,\n      \"aria-label\": \"\\uC54C\\uB9BC \\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// 관리자 드롭다운 컴포넌트\n_c2 = NotificationDropdown;\nconst AdminDropdown = ({\n  isOpen,\n  onClose\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.adminDropdown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.adminDropdownContent,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.adminDropdownItem,\n          children: \"\\uD504\\uB85C\\uD544 \\uC124\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.adminDropdownItem,\n          children: \"\\uACC4\\uC815 \\uAD00\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.adminDropdownDivider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.adminDropdownItem} ${styles.adminDropdownLogout}`,\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: styles.dropdownOverlay,\n      \"aria-label\": \"\\uAD00\\uB9AC\\uC790 \\uBA54\\uB274 \\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// 센서 차트 컴포넌트\n_c3 = AdminDropdown;\nconst SensorChart = ({\n  sensorData,\n  isLoading,\n  error\n}) => {\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorTitle,\n        children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC2E4\\uD328\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  if (!sensorData || !sensorData.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorTitle,\n        children: \"\\uB370\\uC774\\uD130\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  const chartData = sensorData.labels.map((label, index) => ({\n    time: label,\n    value: sensorData.values[index]\n  }));\n  const color = DashboardUtils.getChartColor(sensorData.sensorType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chartContainer,\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: sensorData.sensorType === 'gas' ? /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#f0f0f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'white',\n            border: '1px solid #e5e7eb',\n            borderRadius: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: color,\n          fill: color,\n          fillOpacity: 0.3,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#f0f0f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'white',\n            border: '1px solid #e5e7eb',\n            borderRadius: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: color,\n          strokeWidth: 2,\n          dot: {\n            fill: color,\n            strokeWidth: 2,\n            r: 4\n          },\n          activeDot: {\n            r: 6,\n            stroke: color,\n            strokeWidth: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n// 메인 대시보드 컴포넌트\n_c4 = SensorChart;\nconst DashboardScreen = ({\n  onNavigateToChatbot,\n  onNavigateToHistory,\n  onNavigateToRole\n}) => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('Dashboard');\n  const [notificationData, setNotificationData] = useState({\n    count: 0,\n    notifications: []\n  });\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [isAdminMenuOpen, setIsAdminMenuOpen] = useState(false);\n  const [selectedSensor, setSelectedSensor] = useState('temperature');\n  const [sensorData, setSensorData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [allSensorData, setAllSensorData] = useState({\n    temperature: null,\n    humidity: null,\n    gas: null\n  });\n\n  // 센서 데이터 가져오기\n  const fetchSensorData = async sensorType => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await DashboardAPI.getSensorData(sensorType);\n      if (data.success) {\n        setSensorData(data);\n        setAllSensorData(prev => ({\n          ...prev,\n          [sensorType]: data\n        }));\n      } else {\n        setError('데이터를 불러올 수 없습니다.');\n      }\n    } catch (err) {\n      setError('데이터를 가져오는 중 오류가 발생했습니다.');\n      console.error('센서 데이터 가져오기 실패:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ✅ REPLACE 전체 함수\n  const fetchAllSensorData = async () => {\n    try {\n      const results = await Promise.all(SENSOR_OPTIONS.map(opt => DashboardAPI.getSensorData(opt.value)));\n      const newAllSensorData = {\n        temperature: null,\n        humidity: null,\n        gas: null\n      };\n      results.forEach((result, index) => {\n        if (result.success) {\n          const sensorType = SENSOR_OPTIONS[index].value;\n          newAllSensorData[sensorType] = result;\n        }\n      });\n      setAllSensorData(newAllSensorData);\n    } catch (err) {\n      console.error('전체 센서 데이터 가져오기 실패:', err);\n    }\n  };\n\n  // 알림 데이터 가져오기\n  const fetchNotifications = async () => {\n    try {\n      const data = await DashboardAPI.getNotifications();\n      setNotificationData(data);\n    } catch (error) {\n      console.error('알림 데이터 가져오기 실패:', error);\n    }\n  };\n\n  // 메뉴 클릭 핸들러\n  const handleMenuClick = (label, path) => {\n    setActiveMenu(label);\n    switch (label) {\n      case 'Chatbot':\n        onNavigateToChatbot();\n        break;\n      case 'History':\n        onNavigateToHistory();\n        break;\n      case 'Dashboard':\n        // 대시보드면 현재 화면 유지\n        break;\n      case 'Logout':\n        onNavigateToRole === null || onNavigateToRole === void 0 ? void 0 : onNavigateToRole(); // 역할 선택 화면으로\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 센서 선택 핸들러\n  const handleSensorSelect = sensorType => {\n    setSelectedSensor(sensorType);\n    fetchSensorData(sensorType);\n  };\n\n  // 컴포넌트 마운트 시 초기 데이터 로딩\n  useEffect(() => {\n    fetchNotifications();\n    fetchSensorData('temperature'); // 기본값\n    fetchAllSensorData(); // 테이블용 전체 데이터\n\n    // 주기적으로 데이터 업데이트 (30초마다)\n    const interval = setInterval(() => {\n      fetchNotifications();\n      fetchSensorData(selectedSensor);\n      fetchAllSensorData();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [selectedSensor]);\n\n  // 선택된 센서 변경 시 데이터 다시 가져오기\n  useEffect(() => {\n    if (allSensorData[selectedSensor]) {\n      setSensorData(allSensorData[selectedSensor]);\n    }\n  }, [selectedSensor, allSensorData]);\n\n  // 실시간 시간 업데이트를 위한 useEffect 추가\n  const [currentTime, setCurrentTime] = useState(DashboardUtils.getCurrentDateTime());\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      setCurrentTime(DashboardUtils.getCurrentDateTime());\n    }, 60000); // 1분마다 업데이트\n\n    return () => clearInterval(timeInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboardContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sidebarHeader,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.sidebarTitle,\n          children: \"AWS IOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sidebarMenu,\n        children: MENU_ITEMS.map(item => /*#__PURE__*/_jsxDEV(SidebarItem, {\n          icon: item.icon,\n          label: item.label,\n          isActive: activeMenu === item.label,\n          onClick: () => handleMenuClick(item.label, item.path)\n        }, item.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.mainContent,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.headerLeft,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.pageTitle,\n            children: activeMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.pageSubtitle,\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.headerRight,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.headerItem,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsNotificationOpen(!isNotificationOpen);\n                setIsAdminMenuOpen(false);\n              },\n              className: styles.headerButton,\n              \"aria-label\": \"\\uC54C\\uB9BC\",\n              children: [/*#__PURE__*/_jsxDEV(Bell, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), notificationData.count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.notificationBadge,\n                children: notificationData.count > 99 ? '99+' : notificationData.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NotificationDropdown, {\n              isOpen: isNotificationOpen,\n              onClose: () => setIsNotificationOpen(false),\n              notifications: notificationData.notifications\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.headerItem,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsAdminMenuOpen(!isAdminMenuOpen);\n                setIsNotificationOpen(false);\n              },\n              className: styles.adminButton,\n              \"aria-label\": \"\\uAD00\\uB9AC\\uC790 \\uBA54\\uB274\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uAD00\\uB9AC\\uC790\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AdminDropdown, {\n              isOpen: isAdminMenuOpen,\n              onClose: () => setIsAdminMenuOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dashboardContent,\n        children: activeMenu === 'Dashboard' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.chartSection,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sectionHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: styles.sectionTitle,\n                children: \"TIME-AVERAGED DATA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sensorSelector,\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedSensor,\n                  onChange: e => handleSensorSelect(e.target.value),\n                  className: styles.sensorSelect,\n                  children: SENSOR_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.chartCard,\n              children: /*#__PURE__*/_jsxDEV(SensorChart, {\n                sensorData: sensorData,\n                isLoading: isLoading,\n                error: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.summarySection,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sectionHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: styles.sectionTitle,\n                children: \"CURRENT & PREDICTION DATA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.infoIcon,\n                children: /*#__PURE__*/_jsxDEV(Info, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.summaryCard,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: styles.summaryTable,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"TIME\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"TEMPERATURE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"HUMIDITY\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"GAS CONCENTRATION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"CURRENT DATA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.temperature ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: DashboardUtils.getStatusClass(allSensorData.temperature.current.status),\n                        children: [allSensorData.temperature.current.value.toFixed(1), allSensorData.temperature.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.humidity ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: DashboardUtils.getStatusClass(allSensorData.humidity.current.status),\n                        children: [allSensorData.humidity.current.value.toFixed(1), allSensorData.humidity.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.gas ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: DashboardUtils.getStatusClass(allSensorData.gas.current.status),\n                        children: [allSensorData.gas.current.value.toFixed(0), allSensorData.gas.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"PREDICTION DATA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.temperature ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [allSensorData.temperature.prediction.value.toFixed(1), allSensorData.temperature.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.humidity ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [allSensorData.humidity.prediction.value.toFixed(1), allSensorData.humidity.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: allSensorData.gas ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [allSensorData.gas.prediction.value.toFixed(0), allSensorData.gas.unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uB85C\\uB529 \\uC911...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // 다른 메뉴 선택 시 플레이스홀더\n        _jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '80px 20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '24px',\n              fontWeight: 'bold',\n              color: '#374151',\n              marginBottom: '16px'\n            },\n            children: [activeMenu, \" \\uD398\\uC774\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#6b7280',\n              marginBottom: '8px'\n            },\n            children: [\"\\uD604\\uC7AC \\uC120\\uD0DD\\uB41C \\uBA54\\uB274: \", activeMenu]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '14px',\n              color: '#9ca3af'\n            },\n            children: \"\\uC2E4\\uC81C \\uD398\\uC774\\uC9C0 \\uCEE8\\uD150\\uCE20\\uB97C \\uC5EC\\uAE30\\uC5D0 \\uAD6C\\uD604\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardScreen, \"DxYJa/ciMlV9NA3bsB6GYx6Djl0=\");\n_c5 = DashboardScreen;\nexport default DashboardScreen;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SidebarItem\");\n$RefreshReg$(_c2, \"NotificationDropdown\");\n$RefreshReg$(_c3, \"AdminDropdown\");\n$RefreshReg$(_c4, \"SensorChart\");\n$RefreshReg$(_c5, \"DashboardScreen\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Bell","User","ChevronDown","Info","DashboardAPI","DashboardUtils","SENSOR_OPTIONS","MENU_ITEMS","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","SidebarItem","icon","label","isActive","onClick","className","sidebarItem","sidebarItemActive","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","NotificationDropdown","isOpen","onClose","notifications","dropdown","dropdownHeader","dropdownTitle","notificationList","length","emptyNotification","map","notification","notificationItem","read","notificationItemUnread","notificationMessage","message","notificationTimestamp","timestamp","id","dropdownOverlay","_c2","AdminDropdown","adminDropdown","adminDropdownContent","adminDropdownItem","adminDropdownDivider","adminDropdownLogout","_c3","SensorChart","sensorData","isLoading","error","loadingContainer","errorContainer","errorTitle","errorMessage","success","chartData","labels","index","time","value","values","color","getChartColor","sensorType","chartContainer","width","height","data","strokeDasharray","stroke","dataKey","fontSize","contentStyle","backgroundColor","border","borderRadius","type","fill","fillOpacity","strokeWidth","dot","r","activeDot","_c4","DashboardScreen","onNavigateToChatbot","onNavigateToHistory","onNavigateToRole","_s","activeMenu","setActiveMenu","notificationData","setNotificationData","count","isNotificationOpen","setIsNotificationOpen","isAdminMenuOpen","setIsAdminMenuOpen","selectedSensor","setSelectedSensor","setSensorData","setIsLoading","setError","allSensorData","setAllSensorData","temperature","humidity","gas","fetchSensorData","getSensorData","prev","err","console","fetchAllSensorData","results","Promise","all","opt","newAllSensorData","forEach","result","fetchNotifications","getNotifications","handleMenuClick","path","handleSensorSelect","interval","setInterval","clearInterval","currentTime","setCurrentTime","getCurrentDateTime","timeInterval","dashboardContainer","sidebar","sidebarHeader","sidebarTitle","sidebarMenu","item","mainContent","header","headerLeft","pageTitle","pageSubtitle","headerRight","headerItem","headerButton","size","notificationBadge","adminButton","dashboardContent","chartSection","sectionHeader","sectionTitle","sensorSelector","onChange","e","target","sensorSelect","option","chartCard","summarySection","infoIcon","summaryCard","summaryTable","getStatusClass","current","status","toFixed","unit","prediction","style","textAlign","padding","fontWeight","marginBottom","_c5","$RefreshReg$"],"sources":["C:/Users/arh05/AWS2_GIOT_FULL/frontend/src/pages/Dashboard/DashboardScreen.tsx"],"sourcesContent":["// Dashboard.tsx - 메인 대시보드 컴포넌트\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { Bell, User, ChevronDown, Info } from 'lucide-react';\r\nimport { \r\n  NotificationData, \r\n  SensorData, \r\n  SensorType, \r\n  SidebarItemProps,\r\n  DashboardAPI,\r\n  DashboardUtils,\r\n  SENSOR_OPTIONS,\r\n  MENU_ITEMS\r\n} from '../../services/DashboardTypes';\r\nimport styles from \"./DashboardScreen.module.css\";\r\n\r\n// 사이드바 아이템 컴포넌트\r\nconst SidebarItem: React.FC<SidebarItemProps> = ({ icon, label, isActive, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={`${styles.sidebarItem} ${isActive ? styles.sidebarItemActive : ''}`}\r\n  >\r\n    <span>{icon}</span>\r\n    <span>{label}</span>\r\n  </button>\r\n);\r\n\r\n// 알림 드롭다운 컴포넌트\r\nconst NotificationDropdown: React.FC<{ \r\n  isOpen: boolean; \r\n  onClose: () => void; \r\n  notifications: NotificationData['notifications'];\r\n}> = ({ isOpen, onClose, notifications }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.dropdown}>\r\n        <div className={styles.dropdownHeader}>\r\n          <h3 className={styles.dropdownTitle}>알림</h3>\r\n        </div>\r\n        <div className={styles.notificationList}>\r\n          {notifications.length === 0 ? (\r\n            <div className={styles.emptyNotification}>\r\n              새로운 알림이 없습니다\r\n            </div>\r\n          ) : (\r\n            notifications.map((notification) => (\r\n              <div \r\n                key={notification.id} \r\n                className={`${styles.notificationItem} ${!notification.read ? styles.notificationItemUnread : ''}`}\r\n              >\r\n                <p className={styles.notificationMessage}>{notification.message}</p>\r\n                <p className={styles.notificationTimestamp}>{notification.timestamp}</p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <button \r\n        onClick={onClose}\r\n        className={styles.dropdownOverlay}\r\n        aria-label=\"알림 닫기\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// 관리자 드롭다운 컴포넌트\r\nconst AdminDropdown: React.FC<{ isOpen: boolean; onClose: () => void }> = ({ isOpen, onClose }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.adminDropdown}>\r\n        <div className={styles.adminDropdownContent}>\r\n          <button className={styles.adminDropdownItem}>프로필 설정</button>\r\n          <button className={styles.adminDropdownItem}>계정 관리</button>\r\n          <div className={styles.adminDropdownDivider} />\r\n          <button className={`${styles.adminDropdownItem} ${styles.adminDropdownLogout}`}>로그아웃</button>\r\n        </div>\r\n      </div>\r\n      <button \r\n        onClick={onClose}\r\n        className={styles.dropdownOverlay}\r\n        aria-label=\"관리자 메뉴 닫기\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// 센서 차트 컴포넌트\r\nconst SensorChart: React.FC<{ \r\n  sensorData: SensorData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}> = ({ sensorData, isLoading, error }) => {\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div>데이터를 불러오는 중...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <div className={styles.errorTitle}>데이터 로딩 실패</div>\r\n        <div className={styles.errorMessage}>{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!sensorData || !sensorData.success) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <div className={styles.errorTitle}>데이터를 사용할 수 없습니다</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const chartData = sensorData.labels.map((label, index) => ({\r\n    time: label,\r\n    value: sensorData.values[index]\r\n  }));\r\n\r\n  const color = DashboardUtils.getChartColor(sensorData.sensorType);\r\n\r\n  return (\r\n    <div className={styles.chartContainer}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        {sensorData.sensorType === 'gas' ? (\r\n          <AreaChart data={chartData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n            <XAxis \r\n              dataKey=\"time\" \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <YAxis \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <Tooltip \r\n              contentStyle={{\r\n                backgroundColor: 'white',\r\n                border: '1px solid #e5e7eb',\r\n                borderRadius: '6px'\r\n              }}\r\n            />\r\n            <Area \r\n              type=\"monotone\" \r\n              dataKey=\"value\" \r\n              stroke={color}\r\n              fill={color}\r\n              fillOpacity={0.3}\r\n              strokeWidth={2}\r\n            />\r\n          </AreaChart>\r\n        ) : (\r\n          <LineChart data={chartData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n            <XAxis \r\n              dataKey=\"time\" \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <YAxis \r\n              stroke=\"#666\"\r\n              fontSize={12}\r\n            />\r\n            <Tooltip \r\n              contentStyle={{\r\n                backgroundColor: 'white',\r\n                border: '1px solid #e5e7eb',\r\n                borderRadius: '6px'\r\n              }}\r\n            />\r\n            <Line \r\n              type=\"monotone\" \r\n              dataKey=\"value\" \r\n              stroke={color}\r\n              strokeWidth={2}\r\n              dot={{ fill: color, strokeWidth: 2, r: 4 }}\r\n              activeDot={{ r: 6, stroke: color, strokeWidth: 2 }}\r\n            />\r\n          </LineChart>\r\n        )}\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 메인 대시보드 컴포넌트\r\nconst DashboardScreen: React.FC<DashboardScreenProps> = ({\r\n  onNavigateToChatbot,\r\n  onNavigateToHistory,\r\n  onNavigateToRole,\r\n}) => {\r\n  const [activeMenu, setActiveMenu] = useState('Dashboard');\r\n  const [notificationData, setNotificationData] = useState<NotificationData>({\r\n    count: 0,\r\n    notifications: []\r\n  });\r\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\r\n  const [isAdminMenuOpen, setIsAdminMenuOpen] = useState(false);\r\n  const [selectedSensor, setSelectedSensor] = useState<SensorType>('temperature');\r\n  const [sensorData, setSensorData] = useState<SensorData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [allSensorData, setAllSensorData] = useState<Record<SensorType, SensorData | null>>({\r\n  temperature: null,\r\n  humidity: null,\r\n  gas: null,\r\n});\r\n\r\n  // 센서 데이터 가져오기\r\n  const fetchSensorData = async (sensorType: SensorType) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const data = await DashboardAPI.getSensorData(sensorType);\r\n      \r\n      if (data.success) {\r\n        setSensorData(data as SensorData);\r\n        setAllSensorData(prev => ({\r\n          ...prev,\r\n          [sensorType]: data as SensorData\r\n        }));\r\n      } else {\r\n        setError('데이터를 불러올 수 없습니다.');\r\n      }\r\n    } catch (err) {\r\n      setError('데이터를 가져오는 중 오류가 발생했습니다.');\r\n      console.error('센서 데이터 가져오기 실패:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ REPLACE 전체 함수\r\nconst fetchAllSensorData = async () => {\r\n  try {\r\n    const results = await Promise.all(\r\n      SENSOR_OPTIONS.map(opt => DashboardAPI.getSensorData(opt.value as SensorType))\r\n    );\r\n\r\n    const newAllSensorData: Record<SensorType, SensorData | null> = {\r\n      temperature: null,\r\n      humidity: null,\r\n      gas: null,\r\n    };\r\n\r\n    results.forEach((result, index) => {\r\n      if (result.success) {\r\n        const sensorType = SENSOR_OPTIONS[index].value as SensorType;\r\n        newAllSensorData[sensorType] = result as SensorData;\r\n      }\r\n    });\r\n\r\n    setAllSensorData(newAllSensorData);\r\n  } catch (err) {\r\n    console.error('전체 센서 데이터 가져오기 실패:', err);\r\n  }\r\n};\r\n\r\n  // 알림 데이터 가져오기\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const data = await DashboardAPI.getNotifications();\r\n      setNotificationData(data);\r\n    } catch (error) {\r\n      console.error('알림 데이터 가져오기 실패:', error);\r\n    }\r\n  };\r\n\r\n  // 메뉴 클릭 핸들러\r\n  const handleMenuClick = (label: string, path: string) => {\r\n    setActiveMenu(label);\r\n    \r\n    switch (label) {\r\n    case 'Chatbot':\r\n      onNavigateToChatbot();\r\n      break;\r\n    case 'History':\r\n      onNavigateToHistory();\r\n      break;\r\n    case 'Dashboard':\r\n      // 대시보드면 현재 화면 유지\r\n      break;\r\n    case 'Logout':\r\n      onNavigateToRole?.();  // 역할 선택 화면으로\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n  // 센서 선택 핸들러\r\n  const handleSensorSelect = (sensorType: SensorType) => {\r\n    setSelectedSensor(sensorType);\r\n    fetchSensorData(sensorType);\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 초기 데이터 로딩\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n    fetchSensorData('temperature'); // 기본값\r\n    fetchAllSensorData(); // 테이블용 전체 데이터\r\n    \r\n    // 주기적으로 데이터 업데이트 (30초마다)\r\n    const interval = setInterval(() => {\r\n      fetchNotifications();\r\n      fetchSensorData(selectedSensor);\r\n      fetchAllSensorData();\r\n    }, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [selectedSensor]);\r\n\r\n  // 선택된 센서 변경 시 데이터 다시 가져오기\r\n  useEffect(() => {\r\n    if (allSensorData[selectedSensor]) {\r\n      setSensorData(allSensorData[selectedSensor]);\r\n    }\r\n  }, [selectedSensor, allSensorData]);\r\n\r\n  // 실시간 시간 업데이트를 위한 useEffect 추가\r\n  const [currentTime, setCurrentTime] = useState(DashboardUtils.getCurrentDateTime());\r\n  \r\n  useEffect(() => {\r\n    const timeInterval = setInterval(() => {\r\n      setCurrentTime(DashboardUtils.getCurrentDateTime());\r\n    }, 60000); // 1분마다 업데이트\r\n    \r\n    return () => clearInterval(timeInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.dashboardContainer}>\r\n      {/* 사이드바 */}\r\n      <nav className={styles.sidebar}>\r\n        <div className={styles.sidebarHeader}>\r\n          <h2 className={styles.sidebarTitle}>AWS IOT</h2>\r\n        </div>\r\n\r\n        <div className={styles.sidebarMenu}>\r\n          {MENU_ITEMS.map((item) => (\r\n            <SidebarItem\r\n              key={item.label}\r\n              icon={item.icon}\r\n              label={item.label}\r\n              isActive={activeMenu === item.label}\r\n              onClick={() => handleMenuClick(item.label, item.path)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </nav>\r\n\r\n      {/* 메인 컨텐츠 영역 */}\r\n      <main className={styles.mainContent}>\r\n        {/* 상단 헤더 */}\r\n        <header className={styles.header}>\r\n          <div className={styles.headerLeft}>\r\n            <h1 className={styles.pageTitle}>{activeMenu}</h1>\r\n            <p className={styles.pageSubtitle}>{currentTime}</p>\r\n          </div>\r\n          \r\n          <div className={styles.headerRight}>\r\n            {/* 알림 아이콘 */}\r\n            <div className={styles.headerItem}>\r\n              <button\r\n                onClick={() => {\r\n                  setIsNotificationOpen(!isNotificationOpen);\r\n                  setIsAdminMenuOpen(false);\r\n                }}\r\n                className={styles.headerButton}\r\n                aria-label=\"알림\"\r\n              >\r\n                <Bell size={20} />\r\n                {notificationData.count > 0 && (\r\n                  <span className={styles.notificationBadge}>\r\n                    {notificationData.count > 99 ? '99+' : notificationData.count}\r\n                  </span>\r\n                )}\r\n              </button>\r\n              \r\n              <NotificationDropdown\r\n                isOpen={isNotificationOpen}\r\n                onClose={() => setIsNotificationOpen(false)}\r\n                notifications={notificationData.notifications}\r\n              />\r\n            </div>\r\n\r\n            {/* 관리자 메뉴 */}\r\n            <div className={styles.headerItem}>\r\n              <button\r\n                onClick={() => {\r\n                  setIsAdminMenuOpen(!isAdminMenuOpen);\r\n                  setIsNotificationOpen(false);\r\n                }}\r\n                className={styles.adminButton}\r\n                aria-label=\"관리자 메뉴\"\r\n              >\r\n                <User size={20} />\r\n                <span>관리자</span>\r\n                <ChevronDown size={16} />\r\n              </button>\r\n              \r\n              <AdminDropdown\r\n                isOpen={isAdminMenuOpen}\r\n                onClose={() => setIsAdminMenuOpen(false)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 메인 대시보드 컨텐츠 */}\r\n        <div className={styles.dashboardContent}>\r\n          {activeMenu === 'Dashboard' ? (\r\n            <>\r\n              {/* 시간평균 데이터 차트 섹션 */}\r\n              <section className={styles.chartSection}>\r\n                <div className={styles.sectionHeader}>\r\n                  <h2 className={styles.sectionTitle}>TIME-AVERAGED DATA</h2>\r\n                  \r\n                  {/* 센서 선택 드롭다운 */}\r\n                  <div className={styles.sensorSelector}>\r\n                    <select\r\n                      value={selectedSensor}\r\n                      onChange={(e) => handleSensorSelect(e.target.value as SensorType)}\r\n                      className={styles.sensorSelect}\r\n                    >\r\n                      {SENSOR_OPTIONS.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.chartCard}>\r\n                  <SensorChart \r\n                    sensorData={sensorData}\r\n                    isLoading={isLoading}\r\n                    error={error}\r\n                  />\r\n                </div>\r\n              </section>\r\n\r\n              {/* 현재 & 예측 데이터 테이블 섹션 */}\r\n              <section className={styles.summarySection}>\r\n                <div className={styles.sectionHeader}>\r\n                  <h2 className={styles.sectionTitle}>CURRENT &amp; PREDICTION DATA</h2>\r\n                  <div className={styles.infoIcon}>\r\n                    <Info size={16} />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className={styles.summaryCard}>\r\n                  <table className={styles.summaryTable}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>TIME</th>\r\n                        <th>TEMPERATURE</th>\r\n                        <th>HUMIDITY</th>\r\n                        <th>GAS CONCENTRATION</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* 현재 데이터 행 */}\r\n                      <tr>\r\n                        <td>CURRENT DATA</td>\r\n                        <td>\r\n                          {allSensorData.temperature ? (\r\n                            <span className={DashboardUtils.getStatusClass(allSensorData.temperature.current.status)}>\r\n                              {allSensorData.temperature.current.value.toFixed(1)}{allSensorData.temperature.unit}\r\n                            </span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.humidity ? (\r\n                            <span className={DashboardUtils.getStatusClass(allSensorData.humidity.current.status)}>\r\n                              {allSensorData.humidity.current.value.toFixed(1)}{allSensorData.humidity.unit}\r\n                            </span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.gas ? (\r\n                            <span className={DashboardUtils.getStatusClass(allSensorData.gas.current.status)}>\r\n                              {allSensorData.gas.current.value.toFixed(0)}{allSensorData.gas.unit}\r\n                            </span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      \r\n                      {/* 예측 데이터 행 */}\r\n                      <tr>\r\n                        <td>PREDICTION DATA</td>\r\n                        <td>\r\n                          {allSensorData.temperature ? (\r\n                            <span>{allSensorData.temperature.prediction.value.toFixed(1)}{allSensorData.temperature.unit}</span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.humidity ? (\r\n                            <span>{allSensorData.humidity.prediction.value.toFixed(1)}{allSensorData.humidity.unit}</span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {allSensorData.gas ? (\r\n                            <span>{allSensorData.gas.prediction.value.toFixed(0)}{allSensorData.gas.unit}</span>\r\n                          ) : (\r\n                            <span>로딩 중...</span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </section>\r\n            </>\r\n          ) : (\r\n            // 다른 메뉴 선택 시 플레이스홀더\r\n            <div style={{ textAlign: 'center', padding: '80px 20px' }}>\r\n              <h2 style={{ fontSize: '24px', fontWeight: 'bold', color: '#374151', marginBottom: '16px' }}>\r\n                {activeMenu} 페이지\r\n              </h2>\r\n              <p style={{ color: '#6b7280', marginBottom: '8px' }}>\r\n                현재 선택된 메뉴: {activeMenu}\r\n              </p>\r\n              <p style={{ fontSize: '14px', color: '#9ca3af' }}>\r\n                실제 페이지 컨텐츠를 여기에 구현하세요.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}