{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arh05\\\\AWS2_GIOT_FULL\\\\frontend\\\\src\\\\pages\\\\RoleSelection\\\\RoleSelectionScreen.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// RoleSelectScreen.tsx - 역할 선택 화면 컴포넌트\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Check } from 'lucide-react';\nimport { RoleSelectAPI, RoleSelectUtils } from '../../services/RoleSelectionTypes';\nimport './RoleSelectScreen.module.css';\n\n// 배경 기하학적 패턴 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleSelectGeometricBackground = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"roleSelectGeometricBackground\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleSelectGeometricShape roleSelectHexagon1\",\n    style: {\n      '--rotate': '28deg'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleSelectGeometricShape roleSelectHexagon2\",\n    style: {\n      '--rotate': '-22deg'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleSelectGeometricShape roleSelectHexagon3\",\n    style: {\n      '--rotate': '42deg'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleSelectGeometricShape roleSelectHexagon4\",\n    style: {\n      '--rotate': '-38deg'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleSelectGeometricShape roleSelectLinePattern1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleSelectGeometricShape roleSelectLinePattern2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n\n// 역할 카드 컴포넌트\n_c = RoleSelectGeometricBackground;\nconst RoleCard = ({\n  role,\n  isSelected,\n  isLoading,\n  onClick\n}) => {\n  _s();\n  const handleClick = useCallback(() => {\n    if (!isLoading) {\n      onClick(role.role);\n    }\n  }, [role.role, isLoading, onClick]);\n  const handleKeyPress = useCallback(event => {\n    if ((event.key === 'Enter' || event.key === ' ') && !isLoading) {\n      event.preventDefault();\n      onClick(role.role);\n    }\n  }, [role.role, isLoading, onClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `roleSelectCard ${role.role} ${isSelected ? 'selected' : ''} ${isLoading ? 'loading' : ''}`,\n    onClick: handleClick,\n    onKeyDown: handleKeyPress,\n    tabIndex: 0,\n    role: \"button\",\n    \"aria-label\": `${role.title} 역할 선택`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `roleSelectAvatar ${role.avatar ? 'hasImage' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleSelectInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectRoleTitle\",\n        children: role.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectRoleSubtitle\",\n        children: role.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleSelectSelectedIndicator\",\n      children: /*#__PURE__*/_jsxDEV(Check, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectLoadingSpinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"roleSelectLoadingText\",\n        children: \"\\uC120\\uD0DD \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleCard, \"u+dPlCFtdkuwFjZ2lL5j11gryKw=\");\n_c2 = RoleCard;\nconst RoleSelectScreen = ({\n  onRoleSelected\n}) => {\n  _s2();\n  const [roleSelectState, setRoleSelectState] = useState({\n    selectedRole: null,\n    isLoading: false,\n    error: null,\n    isTransitioning: false\n  });\n  const [roleOptions] = useState(RoleSelectUtils.getRoleOptions());\n\n  // 역할 선택 처리\n  const handleRoleSelect = useCallback(async roleType => {\n    // 중복 클릭 방지\n    if (!RoleSelectUtils.canProceedWithSelection() || roleSelectState.isLoading) {\n      return;\n    }\n    try {\n      setRoleSelectState(prev => ({\n        ...prev,\n        selectedRole: roleType,\n        isLoading: true,\n        error: null\n      }));\n\n      // API 호출 (개발 시에는 목 응답 사용)\n      const response = await RoleSelectAPI.generateMockResponse(roleType);\n      // 실제로는: const response = await RoleSelectAPI.selectRole(roleType);\n\n      if ('success' in response && response.success) {\n        // 역할 정보 세션에 저장\n        RoleSelectUtils.saveSelectedRole(roleType);\n\n        // 성공 애니메이션을 위한 짧은 지연\n        setTimeout(() => {\n          setRoleSelectState(prev => ({\n            ...prev,\n            isTransitioning: true\n          }));\n\n          // 전환 완료 콜백 호출\n          setTimeout(() => {\n            onRoleSelected(roleType, response.redirect);\n          }, 300);\n        }, 800);\n      } else if ('success' in response && !response.success) {\n        throw new Error(response.message);\n      } else {\n        throw new Error(response.error);\n      }\n    } catch (error) {\n      console.error('역할 선택 실패:', error);\n      setRoleSelectState(prev => ({\n        ...prev,\n        selectedRole: null,\n        isLoading: false,\n        error: error instanceof Error ? error.message : '알 수 없는 오류가 발생했습니다.'\n      }));\n    }\n  }, [roleSelectState.isLoading, onRoleSelected]);\n\n  // 에러 자동 제거\n  useEffect(() => {\n    if (roleSelectState.error) {\n      const timer = setTimeout(() => {\n        setRoleSelectState(prev => ({\n          ...prev,\n          error: null\n        }));\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [roleSelectState.error]);\n\n  // 컴포넌트 마운트 시 이전 선택 정보 확인\n  useEffect(() => {\n    const savedRole = RoleSelectUtils.getSavedRole();\n    if (savedRole) {\n      console.log('이전에 선택된 역할:', savedRole);\n      // 필요하다면 자동 진행 또는 표시만 할 수 있음\n    }\n  }, []);\n\n  // 키보드 네비게이션\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (roleSelectState.isLoading) return;\n      if (event.key === '1' || event.key === 'a' || event.key === 'A') {\n        handleRoleSelect('admin');\n      } else if (event.key === '2' || event.key === 'u' || event.key === 'U') {\n        handleRoleSelect('user');\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [roleSelectState.isLoading, handleRoleSelect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `roleSelectContainer ${roleSelectState.isTransitioning ? 'fadeOut' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(RoleSelectGeometricBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleSelectLogo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectLogoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roleSelectLogoMain\",\n          children: \"AWS\\xB2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roleSelectLogoAccent\",\n          children: \"GIoT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roleSelectArrowDecor\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectLogoSubtext\",\n        children: \"Air Watch System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleSelectContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"roleSelectTitle\",\n        children: \"What's Your Role?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectCards\",\n        children: roleOptions.map(roleOption => /*#__PURE__*/_jsxDEV(RoleCard, {\n          role: roleOption,\n          isSelected: roleSelectState.selectedRole === roleOption.role,\n          isLoading: roleSelectState.isLoading && roleSelectState.selectedRole === roleOption.role,\n          onClick: handleRoleSelect\n        }, roleOption.role, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), roleSelectState.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roleSelectError\",\n        children: roleSelectState.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleSelectCopyright\",\n      children: \"2025 GBSA AWS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s2(RoleSelectScreen, \"dnezinh+uVK7Blv/n97hoAxJaIk=\");\n_c3 = RoleSelectScreen;\nexport default RoleSelectScreen;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RoleSelectGeometricBackground\");\n$RefreshReg$(_c2, \"RoleCard\");\n$RefreshReg$(_c3, \"RoleSelectScreen\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Check","RoleSelectAPI","RoleSelectUtils","jsxDEV","_jsxDEV","RoleSelectGeometricBackground","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","RoleCard","role","isSelected","isLoading","onClick","_s","handleClick","handleKeyPress","event","key","preventDefault","onKeyDown","tabIndex","title","avatar","subtitle","size","position","top","left","transform","display","alignItems","_c2","RoleSelectScreen","onRoleSelected","_s2","roleSelectState","setRoleSelectState","selectedRole","error","isTransitioning","roleOptions","getRoleOptions","handleRoleSelect","roleType","canProceedWithSelection","prev","response","generateMockResponse","success","saveSelectedRole","setTimeout","redirect","Error","message","console","timer","clearTimeout","savedRole","getSavedRole","log","handleKeyDown","window","addEventListener","removeEventListener","map","roleOption","_c3","$RefreshReg$"],"sources":["C:/Users/arh05/AWS2_GIOT_FULL/frontend/src/pages/RoleSelection/RoleSelectionScreen.tsx"],"sourcesContent":["// RoleSelectScreen.tsx - 역할 선택 화면 컴포넌트\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { Check } from 'lucide-react';\r\nimport { \r\n  RoleSelectState, \r\n  RoleType, \r\n  RoleOption,\r\n  RoleSelectAPI, \r\n  RoleSelectUtils \r\n} from '../../services/RoleSelectionTypes';\r\nimport './RoleSelectScreen.module.css';\r\n\r\n// 배경 기하학적 패턴 컴포넌트\r\nconst RoleSelectGeometricBackground: React.FC = () => (\r\n  <div className=\"roleSelectGeometricBackground\">\r\n    {/* 육각형들 */}\r\n    <div \r\n      className=\"roleSelectGeometricShape roleSelectHexagon1\"\r\n      style={{ '--rotate': '28deg' } as React.CSSProperties}\r\n    />\r\n    <div \r\n      className=\"roleSelectGeometricShape roleSelectHexagon2\"\r\n      style={{ '--rotate': '-22deg' } as React.CSSProperties}\r\n    />\r\n    <div \r\n      className=\"roleSelectGeometricShape roleSelectHexagon3\"\r\n      style={{ '--rotate': '42deg' } as React.CSSProperties}\r\n    />\r\n    <div \r\n      className=\"roleSelectGeometricShape roleSelectHexagon4\"\r\n      style={{ '--rotate': '-38deg' } as React.CSSProperties}\r\n    />\r\n    \r\n    {/* 선형 패턴들 */}\r\n    <div className=\"roleSelectGeometricShape roleSelectLinePattern1\" />\r\n    <div className=\"roleSelectGeometricShape roleSelectLinePattern2\" />\r\n  </div>\r\n);\r\n\r\n// 역할 카드 컴포넌트\r\nconst RoleCard: React.FC<{\r\n  role: RoleOption;\r\n  isSelected: boolean;\r\n  isLoading: boolean;\r\n  onClick: (roleType: RoleType) => void;\r\n}> = ({ role, isSelected, isLoading, onClick }) => {\r\n  const handleClick = useCallback(() => {\r\n    if (!isLoading) {\r\n      onClick(role.role);\r\n    }\r\n  }, [role.role, isLoading, onClick]);\r\n\r\n  const handleKeyPress = useCallback((event: React.KeyboardEvent) => {\r\n    if ((event.key === 'Enter' || event.key === ' ') && !isLoading) {\r\n      event.preventDefault();\r\n      onClick(role.role);\r\n    }\r\n  }, [role.role, isLoading, onClick]);\r\n\r\n  return (\r\n    <div\r\n      className={`roleSelectCard ${role.role} ${isSelected ? 'selected' : ''} ${isLoading ? 'loading' : ''}`}\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyPress}\r\n      tabIndex={0}\r\n      role=\"button\"\r\n      aria-label={`${role.title} 역할 선택`}\r\n    >\r\n      <div className={`roleSelectAvatar ${role.avatar ? 'hasImage' : ''}`}>\r\n        {/* 실제 이미지가 있다면 여기에 img 태그 추가 */}\r\n      </div>\r\n      \r\n      <div className=\"roleSelectInfo\">\r\n        <div className=\"roleSelectRoleTitle\">{role.title}</div>\r\n        <div className=\"roleSelectRoleSubtitle\">{role.subtitle}</div>\r\n      </div>\r\n      \r\n      {isSelected && (\r\n        <div className=\"roleSelectSelectedIndicator\">\r\n          <Check size={16} />\r\n        </div>\r\n      )}\r\n      \r\n      {isLoading && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}>\r\n          <div className=\"roleSelectLoadingSpinner\" />\r\n          <span className=\"roleSelectLoadingText\">선택 중...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype AppRoute = 'role' | 'dashboard' | 'chatbot' | 'history';\r\n\r\ninterface RoleSelectScreenProps {\r\n  onRoleSelected: (role: 'admin' | 'user', redirect: AppRoute) => void;\r\n}\r\n\r\nconst RoleSelectScreen: React.FC<RoleSelectScreenProps> = ({ onRoleSelected }) => {\r\n  const [roleSelectState, setRoleSelectState] = useState<RoleSelectState>({\r\n    selectedRole: null,\r\n    isLoading: false,\r\n    error: null,\r\n    isTransitioning: false\r\n  });\r\n\r\n  const [roleOptions] = useState<RoleOption[]>(RoleSelectUtils.getRoleOptions());\r\n\r\n  // 역할 선택 처리\r\n  const handleRoleSelect = useCallback(async (roleType: RoleType) => {\r\n    // 중복 클릭 방지\r\n    if (!RoleSelectUtils.canProceedWithSelection() || roleSelectState.isLoading) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setRoleSelectState(prev => ({\r\n        ...prev,\r\n        selectedRole: roleType,\r\n        isLoading: true,\r\n        error: null\r\n      }));\r\n\r\n      // API 호출 (개발 시에는 목 응답 사용)\r\n      const response = await RoleSelectAPI.generateMockResponse(roleType);\r\n      // 실제로는: const response = await RoleSelectAPI.selectRole(roleType);\r\n      \r\n      if ('success' in response && response.success) {\r\n        // 역할 정보 세션에 저장\r\n        RoleSelectUtils.saveSelectedRole(roleType);\r\n        \r\n        // 성공 애니메이션을 위한 짧은 지연\r\n        setTimeout(() => {\r\n          setRoleSelectState(prev => ({\r\n            ...prev,\r\n            isTransitioning: true\r\n          }));\r\n          \r\n          // 전환 완료 콜백 호출\r\n          setTimeout(() => {\r\n            onRoleSelected(roleType, response.redirect as AppRoute);\r\n          }, 300);\r\n        }, 800);\r\n      } else if ('success' in response && !response.success) {\r\n        throw new Error(response.message);\r\n      } else {\r\n        throw new Error((response as any).error);\r\n      }\r\n    } catch (error) {\r\n      console.error('역할 선택 실패:', error);\r\n      \r\n      setRoleSelectState(prev => ({\r\n        ...prev,\r\n        selectedRole: null,\r\n        isLoading: false,\r\n        error: error instanceof Error ? error.message : '알 수 없는 오류가 발생했습니다.'\r\n      }));\r\n    }\r\n  }, [roleSelectState.isLoading, onRoleSelected]);\r\n\r\n  // 에러 자동 제거\r\n  useEffect(() => {\r\n    if (roleSelectState.error) {\r\n      const timer = setTimeout(() => {\r\n        setRoleSelectState(prev => ({ ...prev, error: null }));\r\n      }, 5000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [roleSelectState.error]);\r\n\r\n  // 컴포넌트 마운트 시 이전 선택 정보 확인\r\n  useEffect(() => {\r\n    const savedRole = RoleSelectUtils.getSavedRole();\r\n    if (savedRole) {\r\n      console.log('이전에 선택된 역할:', savedRole);\r\n      // 필요하다면 자동 진행 또는 표시만 할 수 있음\r\n    }\r\n  }, []);\r\n\r\n  // 키보드 네비게이션\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (roleSelectState.isLoading) return;\r\n      \r\n      if (event.key === '1' || event.key === 'a' || event.key === 'A') {\r\n        handleRoleSelect('admin');\r\n      } else if (event.key === '2' || event.key === 'u' || event.key === 'U') {\r\n        handleRoleSelect('user');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [roleSelectState.isLoading, handleRoleSelect]);\r\n\r\n  return (\r\n    <div className={`roleSelectContainer ${roleSelectState.isTransitioning ? 'fadeOut' : ''}`}>\r\n      {/* 배경 기하학적 패턴 */}\r\n      <RoleSelectGeometricBackground />\r\n      \r\n      {/* 상단 로고 */}\r\n      <div className=\"roleSelectLogo\">\r\n        <div className=\"roleSelectLogoText\">\r\n          <div className=\"roleSelectLogoMain\">AWS²</div>\r\n          <div className=\"roleSelectLogoAccent\">GIoT</div>\r\n          <div className=\"roleSelectArrowDecor\">→</div>\r\n        </div>\r\n        <div className=\"roleSelectLogoSubtext\">Air Watch System</div>\r\n      </div>\r\n      \r\n      {/* 메인 콘텐츠 */}\r\n      <div className=\"roleSelectContent\">\r\n        <h1 className=\"roleSelectTitle\">What's Your Role?</h1>\r\n        \r\n        <div className=\"roleSelectCards\">\r\n          {roleOptions.map((roleOption) => (\r\n            <RoleCard\r\n              key={roleOption.role}\r\n              role={roleOption}\r\n              isSelected={roleSelectState.selectedRole === roleOption.role}\r\n              isLoading={roleSelectState.isLoading && roleSelectState.selectedRole === roleOption.role}\r\n              onClick={handleRoleSelect}\r\n            />\r\n          ))}\r\n        </div>\r\n        \r\n        {/* 에러 메시지 */}\r\n        {roleSelectState.error && (\r\n          <div className=\"roleSelectError\">\r\n            {roleSelectState.error}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 하단 카피라이트 */}\r\n      <div className=\"roleSelectCopyright\">\r\n        2025 GBSA AWS\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleSelectScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}